[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Anastasya\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Anastasya\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 135.065ms
[debug]       Load.loadUnit: defsScala took 0.3083ms
[debug] [Loading] Scanning directory C:\Users\Anastasya\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Anastasya\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.619999 ms
[debug]           Load.resolveProject(global-plugins) took 91.1086ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Anastasya\.sbt\1.0\plugins, plugins: List(<none>))) took 150.2582ms
[debug] [Loading] Done in C:\Users\Anastasya\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 188.9696ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.409699ms
[debug]     Load.loadUnit(file:/C:/Users/Anastasya/.sbt/1.0/plugins/, ...) took 341.6798ms
[debug]   Load.apply: load took 692.8335ms
[debug]   Load.apply: resolveProjects took 9.0624ms
[debug]   Load.apply: finalTransforms took 88.388801ms
[debug]   Load.apply: config.delegates took 10.635899ms
[debug]   Load.apply: Def.make(settings)... took 591.473ms
[debug]   Load.apply: structureIndex took 129.6627ms
[debug]   Load.apply: mkStreams took 1.846301ms
[info] loading global plugins from C:\Users\Anastasya\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 9053.5623ms
[debug]           Load.loadUnit: plugins took 31.2602ms
[debug]           Load.loadUnit: defsScala took 0.004999ms
[debug] [Loading] Scanning directory C:\Users\Anastasya\Desktop\AkkaActorTypedProject\project
[debug]             Load.loadUnit: mkEval took 7.9293ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Anastasya\Desktop\AkkaActorTypedProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4025 ms
[info] loading settings for project akkaactortypedproject-build from idea.sbt ...
[debug]               Load.resolveProject(akkaactortypedproject-build) took 4.242499ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akkaactortypedproject-build, base: C:\Users\Anastasya\Desktop\AkkaActorTypedProject\project, plugins: List(<none>))) took 6.262699ms
[debug] [Loading] Done in C:\Users\Anastasya\Desktop\AkkaActorTypedProject\project, returning: (akkaactortypedproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2501.5926ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.117401ms
[debug]         Load.loadUnit(file:/C:/Users/Anastasya/Desktop/AkkaActorTypedProject/project/, ...) took 2543.1061ms
[debug]       Load.apply: load took 2545.168701ms
[debug]       Load.apply: resolveProjects took 0.0879ms
[debug]       Load.apply: finalTransforms took 10.165401ms
[debug]       Load.apply: config.delegates took 0.3657ms
[debug]       Load.apply: Def.make(settings)... took 79.845601ms
[debug]       Load.apply: structureIndex took 47.1806ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from C:\Users\Anastasya\Desktop\AkkaActorTypedProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3205.87ms
[debug]     Load.loadUnit: defsScala took 0.004101ms
[debug] [Loading] Scanning directory C:\Users\Anastasya\Desktop\AkkaActorTypedProject
[debug]       Load.loadUnit: mkEval took 0.616099ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Anastasya\Desktop\AkkaActorTypedProject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2085 ms
[info] loading settings for project akkaactortypedproject from build.sbt ...
[debug]         Load.resolveProject(akkaactortypedproject) took 46.7915ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akkaactortypedproject, base: C:\Users\Anastasya\Desktop\AkkaActorTypedProject, plugins: List(<none>))) took 50.5189ms
[debug] [Loading] Done in C:\Users\Anastasya\Desktop\AkkaActorTypedProject, returning: (akkaactortypedproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 1491.616399ms
[debug]     Load.loadUnit: cleanEvalClasses took 21.0513ms
[debug]   Load.loadUnit(file:/C:/Users/Anastasya/Desktop/AkkaActorTypedProject/, ...) took 4719.559199ms
[debug] Load.apply: load took 4721.6531ms
[debug] Load.apply: resolveProjects took 0.134301ms
[debug] Load.apply: finalTransforms took 43.3987ms
[debug] Load.apply: config.delegates took 0.3481ms
[debug] Load.apply: Def.make(settings)... took 71.7423ms
[debug] Load.apply: structureIndex took 28.853ms
[debug] Load.apply: mkStreams took 0.002099ms
[info] set current project to AkkaActorTypedProject (in build file:/C:/Users/Anastasya/Desktop/AkkaActorTypedProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54063 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54063, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to AkkaActorTypedProject (in build file:/C:/Users/Anastasya/Desktop/AkkaActorTypedProject/)
[debug] > Exec(idea-shell, None, None)
